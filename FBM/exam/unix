@ 유닉스/리눅스 기본 사항과 용어 정리

@ GNU 프로젝트

@ 셸에서 사용하는 특수 문자

@ if 명령에서 조건 검사

@ SSH 서버의 운영

@ 명령 치환 $(...)



==============================================================================================================================
@ 리눅스의 설치 방법 이해(가상머신 SW를 사용하는 것과 하드디스크에 비어있는 파티션에 설치하는 것)

@ 사용자 계정의 관리 명령(useradd, groupadd, passwd 등)과 관련 파일

@ su 명령, sudo 명령

@ chmod 사용법과 파일의 접근권한

@ find 명령

@ Apache 웹서버 설정 파일의 항목

* StartServers : 시작시에 초기화되는 서버 프로세스 갯수
* MaxClients : 동시 연결가능한 클라이언트의 최대 개수
* MinSpareThreads : 대기하고 있는 최소 스레드 갯수
* MaxSpareThreads : 대기하고 있는 최대 스레드 갯수
* ThreadsPerChild : 각각의 자식프로세스가 지속적으로 가질수 있는 스레드의 갯수
* MaxRequestsPerChild : 자식 프로세스가 서비스할 수 있는 최대 요청 갯수


@ 스크립트의 실행 방법
sh filename.sh
./filename.sh

@ 스크립트 작성(함수 정의 사용해 볼 것)
- 스크립트 파일의 가장 위의 첫 라인은 "#! /bin/bash" 로 시작

http://gongdoo.tistory.com/241

@ vi 편집기의 모드, 텍스트 입력 방법, 저장 방법 등
:w > 지정된파일에 저장
:wq, :x, ZZ > 지정된파일에 저장 후 vi 종료
:q > 저장하지 않고 종료
:q! > 저장하지 않고 갈제종료

@ chage 명령
* chage : 사용자 패스워드 만기일 설정 명령어
* option
-i : chage설정 내용을 확인
-m : 새로운 패스워드를 변경할수있는 최소일수
-M : 유효한 패스워드의 최대일수
-W : 사용자가 패스워드를 바꿀때까지 경고할 일수
-E : 뒤의 만료일 날짜 시간을 정해준다
-d : 사용자가 패스워드를 변경한 마지막 일자

ex)
#chage -M 3 -E 2007/04/21 test123 
//3일 뒤에 test123의 패스워드를 바꿔야하며 3일뒤에 로그인 불가 


@ 네트워크 관련 명령(ifconfig, ping, arp, netstat, traceroute 등)의 기본 용도

* arp : 시스템이 가지고 있는 arp 테이블을 확인
* ping : IP 네트워크를 통해 특정한 호스트가 도달할 수 있는지의 여부를 테스트
* netstst : 시스템의 네트워크 연결 목록(tcp, udp, 소켓 연결)을 보여줌
* traceroute : 네트워크를 통해 목적지에 도달하는 경로 확인
* ifconfig : mac주소, 인터페이스 ip주소, 브로드케이스, 서브넷마스크 등 확인

@ rpm과 yum의 차이점 이해, 기본적 명령 사용법(특정 패키지가 설치되었는지 확인하는 명령 등)

<< RPM >> 
- Redhat Package Manager 의 약자
- 프로그램 설치 후 바로 실행가능한 설치파일
- 단점 : 의존성이 높다. rpm파일을 dvd나 인터넷에서 미리 다운로드한 후에 설치해야 한다.

<< YUM >>
- Yellow Updater Modified 의 약자
- RPM 의 의존성 문제를 해결한 것****
- 의존성 있는 다른 패키지파일들을 자동으로 설치해준다
- 인터넷을 통해 자동으로 설치할 수 있다.
- 단점 : 인터넷접속이 필수적으로 요구된다.

@ 파일 출력 명령(cat, more, less, head, tail 등) 이해
cat : 파일 전체내용보기
more : 파일 한페이지씩보기, vi편집가능(아래로만 이동 가능)
less : 파일 한페이지씩보기, vi편집가능(위,아래로 이동 가능)
head : 파일 윗부분부터 보기
tail : 파일 아랫부분부터 보기


@ 리눅스 표준 디렉터리의 용도 이해(/boot /etc /dev /bot /home /usr/sbin 등등)

 /bin : 리눅스 기본 명령어들이 들어 있는 디렉토리
 /dev : 용량이 없는 파일로 구성된 가상의 디렉토리
 /boot : 리눅스 커널이 위치하는 디렉토리, 부팅시 필요한 시스템지원 파일이 있습니다.
 /etc : 시스템의 설정파일이 위치하며, 실은 모든 응용프로그램의 설정파일이 포함됩니다.
 /home : 사용자 홈 디렉토리, 일반 사용자 계정 생성시 홈 디렉토리가 만들어지는 곳입니다.
 /lib : 시스템 라이브러리가 위치하는 디렉토리입니다.
 /mnt : 시디룸이나 USB장치를 인식시키기 위한 디렉토리, mount명령시 이용됩니다.
 /opt : 상용프로그램을 설치하기 위해 설정되어 있는 디렉토리입니다.
 /proc :
 - 시스템의 하드웨어 정보가 위치하는 디렉토리로서
 - 현재 수행중인 프로세서의 정보를 담게 되며,
 - 현재 메모리에서 처리중인 프로그램에 대한 정보가 담겨지게 됩니다.
 /root : 시스템관리자 root 홈 디렉토리, 보안상 따로 분류됩니다.
 /sbin : 시스템관리자 root 가 사용하는 관리 명령어가 들어 있습니다.
 /tmp : 임시 폴더
 /usr :
 - 프로그램 추가시 설치되는 디렉토리로 보통 /usr/local 밑으로 많이 설치됩니다.
 - 이곳에 추가 설치 프로그램 및 라이브러리 등이 포함됩니다,
 /usr/bin : 응용 프로그램 설치시 일반 사용자 명령어가 추가 되는 디렉토리
 /usr/sbin : 응용프로그램 설치시 관리자가 사용하는 명령어가 추가되는 디렉토리
 /var : 시스템 관련 스풀, 메일등이 위치하는 디렉토리로 자료의 변동이 많은 디렉토리입니다.
 /var/log : 시스템 로그 파일이 생성되는 디렉토리입니다.
 /var/spool/mail : 서버의 메일 사용자에게 메일을 전달하기 위해 사용되는 임시 메일 보관장소입니다.
 
@ 포어그라운드와 백그라운드 프로세스 이해

* & :  프로세스를 백그라운드로 실행
* jobs : 백그라운드 실행중인 프로세스 출력
* ctrl+z : 포그라운드 프로세스를 잠시 멈춤 
  - fg로 백 -> 포그라운드에서 다시 실행
  - bg로 포 -> 백그라운드에서 다시 실행
* ctrl+c : 포그라운드 프로세스 종료 시킴.


@ cron 서비스( 관련 파일과 crontab 명령)

/etc/crontab : 명령어를 일정주기로 반복하여 자동 실행

분 시 일 월 요일 실행권한 명령
ex) 01 * * * * root run-parts /etc/cron.hourly
  => 매시, 매일, 매월, 매요일 01분마다 root권한으로 /etc/cron.hourly 디렉토리의 파일들을 수행하라

@ tar 명령의 기본 사용법, 압축을 함께하는 방법

* 압축하기 : > tar -cvf [파일명.tar] [폴더명]
* 압축풀기 : > tar -xvf [파일명.tar]

* option
-c : 파일을 tar로 묶음
-p :  파일 권한을 저장
-v : 묶거나 파일을 풀 때 과정을 화면으로 출력
-f : 파일 이름을 지정
-C : 경로를 지정
-x : tar 압축을 풂
-z : gzip으로 압축하거나 해제함


@ 부팅 과정과 런레벨

* 리눅스 부팅과정
1) power on
2) ROM BIOS에서 지정된 부트 드라이브로 부팅 시작
3) 부트 섹터 로드
4) GRUB 작동
5) 커널 이미지 적재
6) 파일 시스템 마운트
7) 시스템 초기화 프로그램(init) 작동
8) 로그인

* 런레벨
0 - 시스템 중지
1 - 단일 사용자 모드(싱글 모드로 쉘로 바로 부팅)
2 - NFS 기능을 제외한 다중 사용자 모드
3 - 다중 사용자 모드(콘솔모드)
4 - 내용없음(사용하지 않는 값)
5 - GUI의  X - Window 로 부팅
6 - 시스템 리부팅

@ 파일시스템과 디스크 관리를 위한 명령(fdisk, parted, mkfs, du, df 등)

* 파티션 생성/수정 : fdisk
* 파티션 생성/수정/이동 및 파일시스템 생성 : parted
 (  parted명령어는 파티션작업만을 주로 하는 fdisk명령어와 달리, 파티션작업과 함께 파일시스템을 만들수도 있으며, 특정 파티션에 있는 데이터를 다른 파티션으로 옮길수도 있다.)
* 파일시스템 호가인 : fsck [-옵션]
* 파일시스템 생성 : mkfs [-옵션] filesys [blocks]
* 파잀시스템 사용량 확인 : df [-옵션]...[파일]...[--옵션]
* 디렉토리, 파일 사용량 확인 : du [-옵션]...[파일]...[--옵션]


@ 데몬의 시작/종료/재시작 방법( service 명령과 chkconfig 명령)

* chkconfig
chkconfig를 사용하면 시스템을 부팅할 때 런레벨에 따라 자동으로 실행되는 데몬들을 확인, 추가, 수정

# chkconfig option 데몬 상태
:: option은 
 --level 적용할 런레벨을 선택
 --add 데몬 추가
 --del 데몬 삭제
 --list 현재 데몬들의 목록출력

ex)
# chkconfig --list 
전체나옴 (뒤에 | more 옵션으로 화면나누어 보기 가능)

# chkconfig --list 데몬d
데몬d 데몬에 대해서만 나옴

# chkconfig --level 2345 데몬d on
데몬d가 레벨 2,3,4,5에서 활성화 된다.

 

* service
현재 실행중인 데몬을 제어하려면 service 명령어나
/etc/rc.d/init.d 에 있는 실행스크립트를 이용하여 제어할 수 있다.

# service 데몬 상태
상태는 start ,stop, restart, status 이다.

ex) service 데몬d status
데몬d의 서비스 상태를 보여준다.

